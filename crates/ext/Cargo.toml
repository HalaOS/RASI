[package]
description = """
This library includes extend features or experimental features that are useful for asynchronous programming.
"""
documentation = "https://docs.rs/rasi-ext"
edition.workspace = true
license = "MIT"
name = "rasi-ext"
repository.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
rasi = { workspace = true }

parking_lot = { workspace = true, optional = true }
quiche = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
ring = { workspace = true, optional = true }
boring = { workspace = true, optional = true }
http = { workspace = true, optional = true }
thiserror = {workspace = true, optional = true}
serde = {workspace = true, optional = true}
serde_json = {workspace = true, optional = true}

log = { workspace = true }
futures = { workspace = true }


[dev-dependencies]
futures-test = { workspace = true }
divan = { workspace = true }
rasi-default = { workspace = true }
pretty_env_logger = { workspace = true }
dashmap = { workspace = true }

[features]
default = ["quic", "sync_parking_lot", "tls", "http"]

event_map = []
udp_group = ["bytes", "rand"]
quic = ["udp_group", "quiche", "ring", "event_map"]
sync_parking_lot = ["parking_lot"]
tls = ["boring"]
http_support = ["http","thiserror","serde_json","serde"]

[[bench]]
harness = false
name = "map_bench"


[[bench]]
harness = false
name = "queue_bench"
